name: Push installation image 

on: 
  workflow_dispatch:
  release:
    types: [published, created, edited]

jobs:
  windows-install-node:
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'
          cache-dependency-path: purple-hats/package-lock.json
        
      - name: Unzip nodejs-win.zip
        run: tar -xf nodejs-win.zip

      - name: Install Node Modules
        run: npm i fsevents@latest -f --save-optional && npm ci 
        working-directory: purple-hats

      - name: Prepare Windows portable version of zip file
        run: |
          rd -r "nodejs-win.zip"        
          $file=Get-ChildItem -Path ./ -Exclude "nodejs-mac.zip"
          $compress = @{
            Path = $file
            CompressionLevel = "Fastest"
            DestinationPath = "./purple-hats-portable-windows.zip"
          }
          Compress-Archive @compress

      - name: Download Windows zip file 
        uses: actions/upload-artifact@v1
        with:
          name: windows-artifact
          path: ${{ github.workspace }}/purple-hats-portable-windows.zip

  mac-security-prompt-install-node:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [18.x]   

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Unzip nodejs-mac.zip
        run: |
          unzip nodejs-mac.zip 

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'
          cache-dependency-path: purple-hats/package-lock.json
          
      - name: Install Node Modules
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: |
          cd purple-hats
          npm ci 
          
      - name: Grant permission for node modules
        run: |
          export PATH_TO_BETTER_SQLITE3="./purple-hats/node_modules/better-sqlite3-with-prebuilds/build/Release/better_sqlite3.node"
          echo "path to better_sqlite3: $PATH_TO_BETTER_SQLITE3"

          xattr -d com.apple.quarantine $PATH_TO_BETTER_SQLITE3
        continue-on-error: true

      - name: Prepare MAC portable version of zip file
        run: |
          chmod ugo+rwx ./scripts/hats_shell.command ./scripts/hats_shell.sh
          zip -r ./purple-hats-portable-mac.zip ./* -x nodejs-win.zip nodejs-mac.zip
      
      - name: Download Mac zip file
        uses: actions/upload-artifact@v1
        with:
          name: mac-artifact
          path: ${{ github.workspace }}/purple-hats-portable-mac.zip

      - name: Use chrome for Mac OSX
        run: |
          if [[ "$OSTYPE" == "darwin"* ]]; then
              export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true
              export PUPPETEER_EXECUTABLE_PATH='/Applications/Google Chrome.app/Contents/MacOS/Google Chrome'
              echo "using chrome instead of puppeteer"
          fi
          
          
      